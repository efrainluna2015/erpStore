//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataAccess
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class erpStoreEntities : DbContext
    {
        public erpStoreEntities()
            : base("name=erpStoreEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ERError> ERError { get; set; }
        public virtual DbSet<GEBrand> GEBrand { get; set; }
        public virtual DbSet<GECategory> GECategory { get; set; }
        public virtual DbSet<GEProduct> GEProduct { get; set; }
        public virtual DbSet<GEProductBarcode> GEProductBarcode { get; set; }
        public virtual DbSet<GEProductPrice> GEProductPrice { get; set; }
        public virtual DbSet<GEProductPriceAudit> GEProductPriceAudit { get; set; }
        public virtual DbSet<GEProductProperty> GEProductProperty { get; set; }
        public virtual DbSet<GEStore> GEStore { get; set; }
        public virtual DbSet<GEUnit> GEUnit { get; set; }
        public virtual DbSet<PUSupplier> PUSupplier { get; set; }
        public virtual DbSet<SASale> SASale { get; set; }
        public virtual DbSet<SASaleDetail> SASaleDetail { get; set; }
        public virtual DbSet<SEAction> SEAction { get; set; }
        public virtual DbSet<SEProfile> SEProfile { get; set; }
        public virtual DbSet<SEProfileAction> SEProfileAction { get; set; }
        public virtual DbSet<SEUser> SEUser { get; set; }
        public virtual DbSet<TRCash> TRCash { get; set; }
        public virtual DbSet<TRCashMovement> TRCashMovement { get; set; }
        public virtual DbSet<WAEntry> WAEntry { get; set; }
        public virtual DbSet<WAEntryDetail> WAEntryDetail { get; set; }
        public virtual DbSet<WAEntryDetailProperty> WAEntryDetailProperty { get; set; }
        public virtual DbSet<WAProductStock> WAProductStock { get; set; }
        public virtual DbSet<WAProductStockAudit> WAProductStockAudit { get; set; }
        public virtual DbSet<GEGlobalParameters> GEGlobalParameters { get; set; }
    
        public virtual int uspERErrorInsert(string message, string nameStoreProcedure, string user)
        {
            var messageParameter = message != null ?
                new ObjectParameter("message", message) :
                new ObjectParameter("message", typeof(string));
    
            var nameStoreProcedureParameter = nameStoreProcedure != null ?
                new ObjectParameter("nameStoreProcedure", nameStoreProcedure) :
                new ObjectParameter("nameStoreProcedure", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspERErrorInsert", messageParameter, nameStoreProcedureParameter, userParameter);
        }
    
        public virtual int uspGEBrandDelete(Nullable<int> idBrand, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var idBrandParameter = idBrand.HasValue ?
                new ObjectParameter("idBrand", idBrand) :
                new ObjectParameter("idBrand", typeof(int));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGEBrandDelete", idBrandParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspGEBrandInsert(string name, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGEBrandInsert", nameParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual ObjectResult<uspGEBrandSearch_Result> uspGEBrandSearch(string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGEBrandSearch_Result>("uspGEBrandSearch", userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspGEBrandUpdate(Nullable<int> idBrand, string name, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var idBrandParameter = idBrand.HasValue ?
                new ObjectParameter("idBrand", idBrand) :
                new ObjectParameter("idBrand", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGEBrandUpdate", idBrandParameter, nameParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspGECategoryDelete(Nullable<int> idCategory, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var idCategoryParameter = idCategory.HasValue ?
                new ObjectParameter("idCategory", idCategory) :
                new ObjectParameter("idCategory", typeof(int));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGECategoryDelete", idCategoryParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspGECategoryInsert(string name, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGECategoryInsert", nameParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual ObjectResult<uspGECategorySearch_Result> uspGECategorySearch(string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGECategorySearch_Result>("uspGECategorySearch", userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspGECategoryUpdate(Nullable<int> idCategory, string name, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var idCategoryParameter = idCategory.HasValue ?
                new ObjectParameter("idCategory", idCategory) :
                new ObjectParameter("idCategory", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGECategoryUpdate", idCategoryParameter, nameParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual ObjectResult<uspGEGlobalParametersSearch_Result> uspGEGlobalParametersSearch(string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGEGlobalParametersSearch_Result>("uspGEGlobalParametersSearch", userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspGEGlobalParametersUpdate(Nullable<decimal> igv, Nullable<decimal> percentageMinWholesalePrice, Nullable<decimal> percentageMinRetailPrice, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var igvParameter = igv.HasValue ?
                new ObjectParameter("igv", igv) :
                new ObjectParameter("igv", typeof(decimal));
    
            var percentageMinWholesalePriceParameter = percentageMinWholesalePrice.HasValue ?
                new ObjectParameter("percentageMinWholesalePrice", percentageMinWholesalePrice) :
                new ObjectParameter("percentageMinWholesalePrice", typeof(decimal));
    
            var percentageMinRetailPriceParameter = percentageMinRetailPrice.HasValue ?
                new ObjectParameter("percentageMinRetailPrice", percentageMinRetailPrice) :
                new ObjectParameter("percentageMinRetailPrice", typeof(decimal));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGEGlobalParametersUpdate", igvParameter, percentageMinWholesalePriceParameter, percentageMinRetailPriceParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspGEProductBarcodeDelete(Nullable<int> idProduct, string barcode, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var idProductParameter = idProduct.HasValue ?
                new ObjectParameter("idProduct", idProduct) :
                new ObjectParameter("idProduct", typeof(int));
    
            var barcodeParameter = barcode != null ?
                new ObjectParameter("barcode", barcode) :
                new ObjectParameter("barcode", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGEProductBarcodeDelete", idProductParameter, barcodeParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspGEProductBarcodeInsert(Nullable<int> idProduct, string barcode, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var idProductParameter = idProduct.HasValue ?
                new ObjectParameter("idProduct", idProduct) :
                new ObjectParameter("idProduct", typeof(int));
    
            var barcodeParameter = barcode != null ?
                new ObjectParameter("barcode", barcode) :
                new ObjectParameter("barcode", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGEProductBarcodeInsert", idProductParameter, barcodeParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual ObjectResult<uspGEProductBarcodeSearch_Result> uspGEProductBarcodeSearch(string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGEProductBarcodeSearch_Result>("uspGEProductBarcodeSearch", userParameter, returnCode, returnMessage);
        }
    
        public virtual ObjectResult<uspGEProductCategorySearch_Result> uspGEProductCategorySearch(Nullable<int> idCategory, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var idCategoryParameter = idCategory.HasValue ?
                new ObjectParameter("idCategory", idCategory) :
                new ObjectParameter("idCategory", typeof(int));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGEProductCategorySearch_Result>("uspGEProductCategorySearch", idCategoryParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspGEProductDelete(Nullable<int> idProduct, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var idProductParameter = idProduct.HasValue ?
                new ObjectParameter("idProduct", idProduct) :
                new ObjectParameter("idProduct", typeof(int));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGEProductDelete", idProductParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspGEProductInsert(Nullable<int> idCategory, Nullable<int> idBrand, string codeUnit, string name, Nullable<bool> divisible, string divisibleCodeUnit, Nullable<int> divisibleNumberParts, Nullable<bool> perishable, Nullable<bool> traceable, string barcodeType, string user, ObjectParameter idProduct, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var idCategoryParameter = idCategory.HasValue ?
                new ObjectParameter("idCategory", idCategory) :
                new ObjectParameter("idCategory", typeof(int));
    
            var idBrandParameter = idBrand.HasValue ?
                new ObjectParameter("idBrand", idBrand) :
                new ObjectParameter("idBrand", typeof(int));
    
            var codeUnitParameter = codeUnit != null ?
                new ObjectParameter("codeUnit", codeUnit) :
                new ObjectParameter("codeUnit", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var divisibleParameter = divisible.HasValue ?
                new ObjectParameter("divisible", divisible) :
                new ObjectParameter("divisible", typeof(bool));
    
            var divisibleCodeUnitParameter = divisibleCodeUnit != null ?
                new ObjectParameter("divisibleCodeUnit", divisibleCodeUnit) :
                new ObjectParameter("divisibleCodeUnit", typeof(string));
    
            var divisibleNumberPartsParameter = divisibleNumberParts.HasValue ?
                new ObjectParameter("divisibleNumberParts", divisibleNumberParts) :
                new ObjectParameter("divisibleNumberParts", typeof(int));
    
            var perishableParameter = perishable.HasValue ?
                new ObjectParameter("perishable", perishable) :
                new ObjectParameter("perishable", typeof(bool));
    
            var traceableParameter = traceable.HasValue ?
                new ObjectParameter("traceable", traceable) :
                new ObjectParameter("traceable", typeof(bool));
    
            var barcodeTypeParameter = barcodeType != null ?
                new ObjectParameter("barcodeType", barcodeType) :
                new ObjectParameter("barcodeType", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGEProductInsert", idCategoryParameter, idBrandParameter, codeUnitParameter, nameParameter, divisibleParameter, divisibleCodeUnitParameter, divisibleNumberPartsParameter, perishableParameter, traceableParameter, barcodeTypeParameter, userParameter, idProduct, returnCode, returnMessage);
        }
    
        public virtual int uspGEProductPriceAuditInsert(Nullable<int> idProduct, Nullable<decimal> purchasePrice, Nullable<decimal> wholesalePrice, Nullable<decimal> wholesaleMinPrice, Nullable<decimal> retailPrice, Nullable<decimal> retailMinPrice, Nullable<decimal> partPrice, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var idProductParameter = idProduct.HasValue ?
                new ObjectParameter("idProduct", idProduct) :
                new ObjectParameter("idProduct", typeof(int));
    
            var purchasePriceParameter = purchasePrice.HasValue ?
                new ObjectParameter("purchasePrice", purchasePrice) :
                new ObjectParameter("purchasePrice", typeof(decimal));
    
            var wholesalePriceParameter = wholesalePrice.HasValue ?
                new ObjectParameter("wholesalePrice", wholesalePrice) :
                new ObjectParameter("wholesalePrice", typeof(decimal));
    
            var wholesaleMinPriceParameter = wholesaleMinPrice.HasValue ?
                new ObjectParameter("wholesaleMinPrice", wholesaleMinPrice) :
                new ObjectParameter("wholesaleMinPrice", typeof(decimal));
    
            var retailPriceParameter = retailPrice.HasValue ?
                new ObjectParameter("retailPrice", retailPrice) :
                new ObjectParameter("retailPrice", typeof(decimal));
    
            var retailMinPriceParameter = retailMinPrice.HasValue ?
                new ObjectParameter("retailMinPrice", retailMinPrice) :
                new ObjectParameter("retailMinPrice", typeof(decimal));
    
            var partPriceParameter = partPrice.HasValue ?
                new ObjectParameter("partPrice", partPrice) :
                new ObjectParameter("partPrice", typeof(decimal));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGEProductPriceAuditInsert", idProductParameter, purchasePriceParameter, wholesalePriceParameter, wholesaleMinPriceParameter, retailPriceParameter, retailMinPriceParameter, partPriceParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspGEProductPriceDelete(Nullable<int> idProduct, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var idProductParameter = idProduct.HasValue ?
                new ObjectParameter("idProduct", idProduct) :
                new ObjectParameter("idProduct", typeof(int));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGEProductPriceDelete", idProductParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspGEProductPriceInsert(Nullable<int> idProduct, Nullable<decimal> purchasePrice, Nullable<decimal> wholesalePrice, Nullable<decimal> wholesaleMinPrice, Nullable<decimal> retailPrice, Nullable<decimal> retailMinPrice, Nullable<decimal> partPrice, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var idProductParameter = idProduct.HasValue ?
                new ObjectParameter("idProduct", idProduct) :
                new ObjectParameter("idProduct", typeof(int));
    
            var purchasePriceParameter = purchasePrice.HasValue ?
                new ObjectParameter("purchasePrice", purchasePrice) :
                new ObjectParameter("purchasePrice", typeof(decimal));
    
            var wholesalePriceParameter = wholesalePrice.HasValue ?
                new ObjectParameter("wholesalePrice", wholesalePrice) :
                new ObjectParameter("wholesalePrice", typeof(decimal));
    
            var wholesaleMinPriceParameter = wholesaleMinPrice.HasValue ?
                new ObjectParameter("wholesaleMinPrice", wholesaleMinPrice) :
                new ObjectParameter("wholesaleMinPrice", typeof(decimal));
    
            var retailPriceParameter = retailPrice.HasValue ?
                new ObjectParameter("retailPrice", retailPrice) :
                new ObjectParameter("retailPrice", typeof(decimal));
    
            var retailMinPriceParameter = retailMinPrice.HasValue ?
                new ObjectParameter("retailMinPrice", retailMinPrice) :
                new ObjectParameter("retailMinPrice", typeof(decimal));
    
            var partPriceParameter = partPrice.HasValue ?
                new ObjectParameter("partPrice", partPrice) :
                new ObjectParameter("partPrice", typeof(decimal));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGEProductPriceInsert", idProductParameter, purchasePriceParameter, wholesalePriceParameter, wholesaleMinPriceParameter, retailPriceParameter, retailMinPriceParameter, partPriceParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual ObjectResult<uspGEProductPriceSearch_Result> uspGEProductPriceSearch(string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGEProductPriceSearch_Result>("uspGEProductPriceSearch", userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspGEProductPriceUpdate(Nullable<int> idProduct, Nullable<decimal> purchasePrice, Nullable<decimal> wholesalePrice, Nullable<decimal> wholesaleMinPrice, Nullable<decimal> retailPrice, Nullable<decimal> retailMinPrice, Nullable<decimal> partPrice, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var idProductParameter = idProduct.HasValue ?
                new ObjectParameter("idProduct", idProduct) :
                new ObjectParameter("idProduct", typeof(int));
    
            var purchasePriceParameter = purchasePrice.HasValue ?
                new ObjectParameter("purchasePrice", purchasePrice) :
                new ObjectParameter("purchasePrice", typeof(decimal));
    
            var wholesalePriceParameter = wholesalePrice.HasValue ?
                new ObjectParameter("wholesalePrice", wholesalePrice) :
                new ObjectParameter("wholesalePrice", typeof(decimal));
    
            var wholesaleMinPriceParameter = wholesaleMinPrice.HasValue ?
                new ObjectParameter("wholesaleMinPrice", wholesaleMinPrice) :
                new ObjectParameter("wholesaleMinPrice", typeof(decimal));
    
            var retailPriceParameter = retailPrice.HasValue ?
                new ObjectParameter("retailPrice", retailPrice) :
                new ObjectParameter("retailPrice", typeof(decimal));
    
            var retailMinPriceParameter = retailMinPrice.HasValue ?
                new ObjectParameter("retailMinPrice", retailMinPrice) :
                new ObjectParameter("retailMinPrice", typeof(decimal));
    
            var partPriceParameter = partPrice.HasValue ?
                new ObjectParameter("partPrice", partPrice) :
                new ObjectParameter("partPrice", typeof(decimal));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGEProductPriceUpdate", idProductParameter, purchasePriceParameter, wholesalePriceParameter, wholesaleMinPriceParameter, retailPriceParameter, retailMinPriceParameter, partPriceParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspGEProductPropertyDelete(Nullable<int> idProduct, Nullable<int> idProductProperty, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var idProductParameter = idProduct.HasValue ?
                new ObjectParameter("idProduct", idProduct) :
                new ObjectParameter("idProduct", typeof(int));
    
            var idProductPropertyParameter = idProductProperty.HasValue ?
                new ObjectParameter("idProductProperty", idProductProperty) :
                new ObjectParameter("idProductProperty", typeof(int));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGEProductPropertyDelete", idProductParameter, idProductPropertyParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspGEProductPropertyInsert(Nullable<int> idProduct, string name, string abbreviation, Nullable<bool> required, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var idProductParameter = idProduct.HasValue ?
                new ObjectParameter("idProduct", idProduct) :
                new ObjectParameter("idProduct", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var abbreviationParameter = abbreviation != null ?
                new ObjectParameter("abbreviation", abbreviation) :
                new ObjectParameter("abbreviation", typeof(string));
    
            var requiredParameter = required.HasValue ?
                new ObjectParameter("required", required) :
                new ObjectParameter("required", typeof(bool));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGEProductPropertyInsert", idProductParameter, nameParameter, abbreviationParameter, requiredParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual ObjectResult<uspGEProductPropertySearch_Result> uspGEProductPropertySearch(Nullable<int> idProduct, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var idProductParameter = idProduct.HasValue ?
                new ObjectParameter("idProduct", idProduct) :
                new ObjectParameter("idProduct", typeof(int));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGEProductPropertySearch_Result>("uspGEProductPropertySearch", idProductParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspGEProductPropertyUpdate(Nullable<int> idProductProperty, Nullable<int> idProduct, string name, string abbreviation, Nullable<bool> required, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var idProductPropertyParameter = idProductProperty.HasValue ?
                new ObjectParameter("idProductProperty", idProductProperty) :
                new ObjectParameter("idProductProperty", typeof(int));
    
            var idProductParameter = idProduct.HasValue ?
                new ObjectParameter("idProduct", idProduct) :
                new ObjectParameter("idProduct", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var abbreviationParameter = abbreviation != null ?
                new ObjectParameter("abbreviation", abbreviation) :
                new ObjectParameter("abbreviation", typeof(string));
    
            var requiredParameter = required.HasValue ?
                new ObjectParameter("required", required) :
                new ObjectParameter("required", typeof(bool));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGEProductPropertyUpdate", idProductPropertyParameter, idProductParameter, nameParameter, abbreviationParameter, requiredParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual ObjectResult<uspGEProductSearch_Result> uspGEProductSearch(string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGEProductSearch_Result>("uspGEProductSearch", userParameter, returnCode, returnMessage);
        }
    
        public virtual ObjectResult<uspGEProductSearchById_Result> uspGEProductSearchById(Nullable<int> idProduct, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var idProductParameter = idProduct.HasValue ?
                new ObjectParameter("idProduct", idProduct) :
                new ObjectParameter("idProduct", typeof(int));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGEProductSearchById_Result>("uspGEProductSearchById", idProductParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspGEProductUpdate(Nullable<int> idProduct, Nullable<int> idCategory, Nullable<int> idBrand, string codeUnit, string name, Nullable<bool> divisible, string divisibleCodeUnit, Nullable<int> divisibleNumberParts, Nullable<bool> perishable, Nullable<bool> traceable, string barcodeType, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var idProductParameter = idProduct.HasValue ?
                new ObjectParameter("idProduct", idProduct) :
                new ObjectParameter("idProduct", typeof(int));
    
            var idCategoryParameter = idCategory.HasValue ?
                new ObjectParameter("idCategory", idCategory) :
                new ObjectParameter("idCategory", typeof(int));
    
            var idBrandParameter = idBrand.HasValue ?
                new ObjectParameter("idBrand", idBrand) :
                new ObjectParameter("idBrand", typeof(int));
    
            var codeUnitParameter = codeUnit != null ?
                new ObjectParameter("codeUnit", codeUnit) :
                new ObjectParameter("codeUnit", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var divisibleParameter = divisible.HasValue ?
                new ObjectParameter("divisible", divisible) :
                new ObjectParameter("divisible", typeof(bool));
    
            var divisibleCodeUnitParameter = divisibleCodeUnit != null ?
                new ObjectParameter("divisibleCodeUnit", divisibleCodeUnit) :
                new ObjectParameter("divisibleCodeUnit", typeof(string));
    
            var divisibleNumberPartsParameter = divisibleNumberParts.HasValue ?
                new ObjectParameter("divisibleNumberParts", divisibleNumberParts) :
                new ObjectParameter("divisibleNumberParts", typeof(int));
    
            var perishableParameter = perishable.HasValue ?
                new ObjectParameter("perishable", perishable) :
                new ObjectParameter("perishable", typeof(bool));
    
            var traceableParameter = traceable.HasValue ?
                new ObjectParameter("traceable", traceable) :
                new ObjectParameter("traceable", typeof(bool));
    
            var barcodeTypeParameter = barcodeType != null ?
                new ObjectParameter("barcodeType", barcodeType) :
                new ObjectParameter("barcodeType", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGEProductUpdate", idProductParameter, idCategoryParameter, idBrandParameter, codeUnitParameter, nameParameter, divisibleParameter, divisibleCodeUnitParameter, divisibleNumberPartsParameter, perishableParameter, traceableParameter, barcodeTypeParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspGEStoreDelete(Nullable<int> idStore, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var idStoreParameter = idStore.HasValue ?
                new ObjectParameter("idStore", idStore) :
                new ObjectParameter("idStore", typeof(int));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGEStoreDelete", idStoreParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspGEStoreInsert(string name, string address, string processSale, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var processSaleParameter = processSale != null ?
                new ObjectParameter("processSale", processSale) :
                new ObjectParameter("processSale", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGEStoreInsert", nameParameter, addressParameter, processSaleParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual ObjectResult<uspGEStoreSearch_Result> uspGEStoreSearch(string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGEStoreSearch_Result>("uspGEStoreSearch", userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspGEStoreUpdate(Nullable<int> idStore, string name, string address, string processSale, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var idStoreParameter = idStore.HasValue ?
                new ObjectParameter("idStore", idStore) :
                new ObjectParameter("idStore", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var processSaleParameter = processSale != null ?
                new ObjectParameter("processSale", processSale) :
                new ObjectParameter("processSale", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGEStoreUpdate", idStoreParameter, nameParameter, addressParameter, processSaleParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspGEUnitDelete(string codeUnit, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var codeUnitParameter = codeUnit != null ?
                new ObjectParameter("codeUnit", codeUnit) :
                new ObjectParameter("codeUnit", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGEUnitDelete", codeUnitParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspGEUnitInsert(string code, string name, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGEUnitInsert", codeParameter, nameParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual ObjectResult<uspGEUnitSearch_Result> uspGEUnitSearch(string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGEUnitSearch_Result>("uspGEUnitSearch", userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspGEUnitUpdate(string codeUnitOld, string codeUnitNew, string name, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var codeUnitOldParameter = codeUnitOld != null ?
                new ObjectParameter("codeUnitOld", codeUnitOld) :
                new ObjectParameter("codeUnitOld", typeof(string));
    
            var codeUnitNewParameter = codeUnitNew != null ?
                new ObjectParameter("codeUnitNew", codeUnitNew) :
                new ObjectParameter("codeUnitNew", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGEUnitUpdate", codeUnitOldParameter, codeUnitNewParameter, nameParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspPUSupplierDelete(Nullable<int> idSupplier, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var idSupplierParameter = idSupplier.HasValue ?
                new ObjectParameter("idSupplier", idSupplier) :
                new ObjectParameter("idSupplier", typeof(int));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPUSupplierDelete", idSupplierParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspPUSupplierInsert(string name, string documentType, string documentNumber, string address, string phone, string email, string contactPerson, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var documentTypeParameter = documentType != null ?
                new ObjectParameter("documentType", documentType) :
                new ObjectParameter("documentType", typeof(string));
    
            var documentNumberParameter = documentNumber != null ?
                new ObjectParameter("documentNumber", documentNumber) :
                new ObjectParameter("documentNumber", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var contactPersonParameter = contactPerson != null ?
                new ObjectParameter("contactPerson", contactPerson) :
                new ObjectParameter("contactPerson", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPUSupplierInsert", nameParameter, documentTypeParameter, documentNumberParameter, addressParameter, phoneParameter, emailParameter, contactPersonParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual ObjectResult<uspPUSupplierSearch_Result> uspPUSupplierSearch(string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspPUSupplierSearch_Result>("uspPUSupplierSearch", userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspPUSupplierUpdate(Nullable<int> idSupplier, string name, string documentType, string documentNumber, string address, string phone, string email, string contactPerson, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var idSupplierParameter = idSupplier.HasValue ?
                new ObjectParameter("idSupplier", idSupplier) :
                new ObjectParameter("idSupplier", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var documentTypeParameter = documentType != null ?
                new ObjectParameter("documentType", documentType) :
                new ObjectParameter("documentType", typeof(string));
    
            var documentNumberParameter = documentNumber != null ?
                new ObjectParameter("documentNumber", documentNumber) :
                new ObjectParameter("documentNumber", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var contactPersonParameter = contactPerson != null ?
                new ObjectParameter("contactPerson", contactPerson) :
                new ObjectParameter("contactPerson", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPUSupplierUpdate", idSupplierParameter, nameParameter, documentTypeParameter, documentNumberParameter, addressParameter, phoneParameter, emailParameter, contactPersonParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspSASaleDelete(Nullable<int> idSale, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var idSaleParameter = idSale.HasValue ?
                new ObjectParameter("idSale", idSale) :
                new ObjectParameter("idSale", typeof(int));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspSASaleDelete", idSaleParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspSASaleDetailDelete(Nullable<int> idSale, Nullable<int> idProduct, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var idSaleParameter = idSale.HasValue ?
                new ObjectParameter("idSale", idSale) :
                new ObjectParameter("idSale", typeof(int));
    
            var idProductParameter = idProduct.HasValue ?
                new ObjectParameter("idProduct", idProduct) :
                new ObjectParameter("idProduct", typeof(int));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspSASaleDetailDelete", idSaleParameter, idProductParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspSASaleDetailInsert(Nullable<int> idSale, Nullable<int> idProduct, Nullable<int> quantity, Nullable<decimal> unitPrice, Nullable<bool> partSale, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var idSaleParameter = idSale.HasValue ?
                new ObjectParameter("idSale", idSale) :
                new ObjectParameter("idSale", typeof(int));
    
            var idProductParameter = idProduct.HasValue ?
                new ObjectParameter("idProduct", idProduct) :
                new ObjectParameter("idProduct", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(int));
    
            var unitPriceParameter = unitPrice.HasValue ?
                new ObjectParameter("unitPrice", unitPrice) :
                new ObjectParameter("unitPrice", typeof(decimal));
    
            var partSaleParameter = partSale.HasValue ?
                new ObjectParameter("partSale", partSale) :
                new ObjectParameter("partSale", typeof(bool));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspSASaleDetailInsert", idSaleParameter, idProductParameter, quantityParameter, unitPriceParameter, partSaleParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual ObjectResult<uspSASaleDetailSearch_Result> uspSASaleDetailSearch(string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspSASaleDetailSearch_Result>("uspSASaleDetailSearch", userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspSASaleInsert(string documentType, string documentNumber, Nullable<System.DateTime> date, Nullable<int> ticket, string status, string user, ObjectParameter idSale, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var documentTypeParameter = documentType != null ?
                new ObjectParameter("documentType", documentType) :
                new ObjectParameter("documentType", typeof(string));
    
            var documentNumberParameter = documentNumber != null ?
                new ObjectParameter("documentNumber", documentNumber) :
                new ObjectParameter("documentNumber", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var ticketParameter = ticket.HasValue ?
                new ObjectParameter("ticket", ticket) :
                new ObjectParameter("ticket", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspSASaleInsert", documentTypeParameter, documentNumberParameter, dateParameter, ticketParameter, statusParameter, userParameter, idSale, returnCode, returnMessage);
        }
    
        public virtual ObjectResult<uspSASaleSearch_Result> uspSASaleSearch(string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspSASaleSearch_Result>("uspSASaleSearch", userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspSASaleUpdate(Nullable<int> idSale, string documentType, string documentNumber, Nullable<System.DateTime> date, string status, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var idSaleParameter = idSale.HasValue ?
                new ObjectParameter("idSale", idSale) :
                new ObjectParameter("idSale", typeof(int));
    
            var documentTypeParameter = documentType != null ?
                new ObjectParameter("documentType", documentType) :
                new ObjectParameter("documentType", typeof(string));
    
            var documentNumberParameter = documentNumber != null ?
                new ObjectParameter("documentNumber", documentNumber) :
                new ObjectParameter("documentNumber", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspSASaleUpdate", idSaleParameter, documentTypeParameter, documentNumberParameter, dateParameter, statusParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspSEActionDelete(string code, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspSEActionDelete", codeParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspSEActionInsert(string code, string name, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspSEActionInsert", codeParameter, nameParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual ObjectResult<uspSEActionSearch_Result> uspSEActionSearch(string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspSEActionSearch_Result>("uspSEActionSearch", userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspSEActionUpdate(string codeOld, string codeNew, string name, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var codeOldParameter = codeOld != null ?
                new ObjectParameter("codeOld", codeOld) :
                new ObjectParameter("codeOld", typeof(string));
    
            var codeNewParameter = codeNew != null ?
                new ObjectParameter("codeNew", codeNew) :
                new ObjectParameter("codeNew", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspSEActionUpdate", codeOldParameter, codeNewParameter, nameParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspSEProfileActionDelete(Nullable<int> idProfile, string code, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var idProfileParameter = idProfile.HasValue ?
                new ObjectParameter("idProfile", idProfile) :
                new ObjectParameter("idProfile", typeof(int));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspSEProfileActionDelete", idProfileParameter, codeParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspSEProfileActionInsert(Nullable<int> idProfile, string code, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var idProfileParameter = idProfile.HasValue ?
                new ObjectParameter("idProfile", idProfile) :
                new ObjectParameter("idProfile", typeof(int));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspSEProfileActionInsert", idProfileParameter, codeParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual ObjectResult<uspSEProfileActionSearch_Result> uspSEProfileActionSearch(string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspSEProfileActionSearch_Result>("uspSEProfileActionSearch", userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspSEProfileDelete(Nullable<int> idProfile, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var idProfileParameter = idProfile.HasValue ?
                new ObjectParameter("idProfile", idProfile) :
                new ObjectParameter("idProfile", typeof(int));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspSEProfileDelete", idProfileParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspSEProfileInsert(string name, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspSEProfileInsert", nameParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual ObjectResult<uspSEProfileSearch_Result> uspSEProfileSearch(string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspSEProfileSearch_Result>("uspSEProfileSearch", userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspSEProfileUpdate(Nullable<int> idProfile, string name, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var idProfileParameter = idProfile.HasValue ?
                new ObjectParameter("idProfile", idProfile) :
                new ObjectParameter("idProfile", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspSEProfileUpdate", idProfileParameter, nameParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspSEUserDelete(string username, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspSEUserDelete", usernameParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspSEUserInsert(string username, Nullable<int> idProfile, Nullable<int> idStore, string name, string lastname, byte[] password, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var idProfileParameter = idProfile.HasValue ?
                new ObjectParameter("idProfile", idProfile) :
                new ObjectParameter("idProfile", typeof(int));
    
            var idStoreParameter = idStore.HasValue ?
                new ObjectParameter("idStore", idStore) :
                new ObjectParameter("idStore", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("lastname", lastname) :
                new ObjectParameter("lastname", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(byte[]));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspSEUserInsert", usernameParameter, idProfileParameter, idStoreParameter, nameParameter, lastnameParameter, passwordParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual ObjectResult<uspSEUserLogin_Result> uspSEUserLogin(string username, string password, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspSEUserLogin_Result>("uspSEUserLogin", usernameParameter, passwordParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual ObjectResult<uspSEUserProfileActionSearch_Result> uspSEUserProfileActionSearch(string username, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspSEUserProfileActionSearch_Result>("uspSEUserProfileActionSearch", usernameParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual ObjectResult<uspSEUserSearch_Result> uspSEUserSearch(string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspSEUserSearch_Result>("uspSEUserSearch", userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspSEUserUpdate(string userName, Nullable<int> idProfile, Nullable<int> idStore, string name, string lastname, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));
    
            var idProfileParameter = idProfile.HasValue ?
                new ObjectParameter("idProfile", idProfile) :
                new ObjectParameter("idProfile", typeof(int));
    
            var idStoreParameter = idStore.HasValue ?
                new ObjectParameter("idStore", idStore) :
                new ObjectParameter("idStore", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("lastname", lastname) :
                new ObjectParameter("lastname", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspSEUserUpdate", userNameParameter, idProfileParameter, idStoreParameter, nameParameter, lastnameParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspSEUserUpdatePassword(string username, string passNew, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passNewParameter = passNew != null ?
                new ObjectParameter("passNew", passNew) :
                new ObjectParameter("passNew", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspSEUserUpdatePassword", usernameParameter, passNewParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspTRCashDelete(Nullable<int> idCash, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var idCashParameter = idCash.HasValue ?
                new ObjectParameter("idCash", idCash) :
                new ObjectParameter("idCash", typeof(int));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspTRCashDelete", idCashParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspTRCashInsert(Nullable<int> idStore, string name, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var idStoreParameter = idStore.HasValue ?
                new ObjectParameter("idStore", idStore) :
                new ObjectParameter("idStore", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspTRCashInsert", idStoreParameter, nameParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspTRCashMovementDelete(Nullable<int> idMovement, Nullable<int> idCash, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var idMovementParameter = idMovement.HasValue ?
                new ObjectParameter("idMovement", idMovement) :
                new ObjectParameter("idMovement", typeof(int));
    
            var idCashParameter = idCash.HasValue ?
                new ObjectParameter("idCash", idCash) :
                new ObjectParameter("idCash", typeof(int));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspTRCashMovementDelete", idMovementParameter, idCashParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspTRCashMovementInsert(Nullable<int> idMovement, Nullable<int> idCash, Nullable<int> idSale, Nullable<System.DateTime> date, string movementType, Nullable<decimal> amount, Nullable<decimal> amountOpening, Nullable<decimal> amountClosing, string concept, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var idMovementParameter = idMovement.HasValue ?
                new ObjectParameter("idMovement", idMovement) :
                new ObjectParameter("idMovement", typeof(int));
    
            var idCashParameter = idCash.HasValue ?
                new ObjectParameter("idCash", idCash) :
                new ObjectParameter("idCash", typeof(int));
    
            var idSaleParameter = idSale.HasValue ?
                new ObjectParameter("idSale", idSale) :
                new ObjectParameter("idSale", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var movementTypeParameter = movementType != null ?
                new ObjectParameter("movementType", movementType) :
                new ObjectParameter("movementType", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            var amountOpeningParameter = amountOpening.HasValue ?
                new ObjectParameter("amountOpening", amountOpening) :
                new ObjectParameter("amountOpening", typeof(decimal));
    
            var amountClosingParameter = amountClosing.HasValue ?
                new ObjectParameter("amountClosing", amountClosing) :
                new ObjectParameter("amountClosing", typeof(decimal));
    
            var conceptParameter = concept != null ?
                new ObjectParameter("concept", concept) :
                new ObjectParameter("concept", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspTRCashMovementInsert", idMovementParameter, idCashParameter, idSaleParameter, dateParameter, movementTypeParameter, amountParameter, amountOpeningParameter, amountClosingParameter, conceptParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual ObjectResult<uspTRCashMovementSearch_Result> uspTRCashMovementSearch(string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspTRCashMovementSearch_Result>("uspTRCashMovementSearch", userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspTRCashMovementUpdate(Nullable<int> idMovement, Nullable<int> idCash, Nullable<int> idSale, Nullable<System.DateTime> date, string movementType, Nullable<decimal> amount, Nullable<decimal> amountOpening, Nullable<decimal> amountClosing, string concept, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var idMovementParameter = idMovement.HasValue ?
                new ObjectParameter("idMovement", idMovement) :
                new ObjectParameter("idMovement", typeof(int));
    
            var idCashParameter = idCash.HasValue ?
                new ObjectParameter("idCash", idCash) :
                new ObjectParameter("idCash", typeof(int));
    
            var idSaleParameter = idSale.HasValue ?
                new ObjectParameter("idSale", idSale) :
                new ObjectParameter("idSale", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var movementTypeParameter = movementType != null ?
                new ObjectParameter("movementType", movementType) :
                new ObjectParameter("movementType", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            var amountOpeningParameter = amountOpening.HasValue ?
                new ObjectParameter("amountOpening", amountOpening) :
                new ObjectParameter("amountOpening", typeof(decimal));
    
            var amountClosingParameter = amountClosing.HasValue ?
                new ObjectParameter("amountClosing", amountClosing) :
                new ObjectParameter("amountClosing", typeof(decimal));
    
            var conceptParameter = concept != null ?
                new ObjectParameter("concept", concept) :
                new ObjectParameter("concept", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspTRCashMovementUpdate", idMovementParameter, idCashParameter, idSaleParameter, dateParameter, movementTypeParameter, amountParameter, amountOpeningParameter, amountClosingParameter, conceptParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual ObjectResult<uspTRCashSearch_Result> uspTRCashSearch(string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspTRCashSearch_Result>("uspTRCashSearch", userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspTRCashUpdate(Nullable<int> idCash, Nullable<int> idStore, string name, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var idCashParameter = idCash.HasValue ?
                new ObjectParameter("idCash", idCash) :
                new ObjectParameter("idCash", typeof(int));
    
            var idStoreParameter = idStore.HasValue ?
                new ObjectParameter("idStore", idStore) :
                new ObjectParameter("idStore", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspTRCashUpdate", idCashParameter, idStoreParameter, nameParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspWAEntryDelete(Nullable<int> idEntry, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var idEntryParameter = idEntry.HasValue ?
                new ObjectParameter("idEntry", idEntry) :
                new ObjectParameter("idEntry", typeof(int));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspWAEntryDelete", idEntryParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspWAEntryDetailDelete(Nullable<int> idEntryDetail, Nullable<int> idEntry, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var idEntryDetailParameter = idEntryDetail.HasValue ?
                new ObjectParameter("idEntryDetail", idEntryDetail) :
                new ObjectParameter("idEntryDetail", typeof(int));
    
            var idEntryParameter = idEntry.HasValue ?
                new ObjectParameter("idEntry", idEntry) :
                new ObjectParameter("idEntry", typeof(int));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspWAEntryDetailDelete", idEntryDetailParameter, idEntryParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspWAEntryDetailInsert(Nullable<int> idEntry, Nullable<int> idProduct, Nullable<int> quantity, Nullable<decimal> purchasePrice, string dueDate, string user, ObjectParameter idEntryDetail, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var idEntryParameter = idEntry.HasValue ?
                new ObjectParameter("idEntry", idEntry) :
                new ObjectParameter("idEntry", typeof(int));
    
            var idProductParameter = idProduct.HasValue ?
                new ObjectParameter("idProduct", idProduct) :
                new ObjectParameter("idProduct", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(int));
    
            var purchasePriceParameter = purchasePrice.HasValue ?
                new ObjectParameter("purchasePrice", purchasePrice) :
                new ObjectParameter("purchasePrice", typeof(decimal));
    
            var dueDateParameter = dueDate != null ?
                new ObjectParameter("dueDate", dueDate) :
                new ObjectParameter("dueDate", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspWAEntryDetailInsert", idEntryParameter, idProductParameter, quantityParameter, purchasePriceParameter, dueDateParameter, userParameter, idEntryDetail, returnCode, returnMessage);
        }
    
        public virtual int uspWAEntryDetailPropertyDelete(Nullable<int> idEntry, Nullable<int> idEntryDetail, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var idEntryParameter = idEntry.HasValue ?
                new ObjectParameter("idEntry", idEntry) :
                new ObjectParameter("idEntry", typeof(int));
    
            var idEntryDetailParameter = idEntryDetail.HasValue ?
                new ObjectParameter("idEntryDetail", idEntryDetail) :
                new ObjectParameter("idEntryDetail", typeof(int));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspWAEntryDetailPropertyDelete", idEntryParameter, idEntryDetailParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspWAEntryDetailPropertyInsert(Nullable<int> idEntry, Nullable<int> idEntryDetail, Nullable<int> idProduct, Nullable<int> idProperty, string value, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var idEntryParameter = idEntry.HasValue ?
                new ObjectParameter("idEntry", idEntry) :
                new ObjectParameter("idEntry", typeof(int));
    
            var idEntryDetailParameter = idEntryDetail.HasValue ?
                new ObjectParameter("idEntryDetail", idEntryDetail) :
                new ObjectParameter("idEntryDetail", typeof(int));
    
            var idProductParameter = idProduct.HasValue ?
                new ObjectParameter("idProduct", idProduct) :
                new ObjectParameter("idProduct", typeof(int));
    
            var idPropertyParameter = idProperty.HasValue ?
                new ObjectParameter("idProperty", idProperty) :
                new ObjectParameter("idProperty", typeof(int));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspWAEntryDetailPropertyInsert", idEntryParameter, idEntryDetailParameter, idProductParameter, idPropertyParameter, valueParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual ObjectResult<uspWAEntryDetailPropertySearch_Result> uspWAEntryDetailPropertySearch(Nullable<int> idEntry, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var idEntryParameter = idEntry.HasValue ?
                new ObjectParameter("idEntry", idEntry) :
                new ObjectParameter("idEntry", typeof(int));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspWAEntryDetailPropertySearch_Result>("uspWAEntryDetailPropertySearch", idEntryParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspWAEntryDetailPropertyUpdate(Nullable<int> idEntry, Nullable<int> idEntryDetail, Nullable<int> idProduct, Nullable<int> idProperty, string value, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var idEntryParameter = idEntry.HasValue ?
                new ObjectParameter("idEntry", idEntry) :
                new ObjectParameter("idEntry", typeof(int));
    
            var idEntryDetailParameter = idEntryDetail.HasValue ?
                new ObjectParameter("idEntryDetail", idEntryDetail) :
                new ObjectParameter("idEntryDetail", typeof(int));
    
            var idProductParameter = idProduct.HasValue ?
                new ObjectParameter("idProduct", idProduct) :
                new ObjectParameter("idProduct", typeof(int));
    
            var idPropertyParameter = idProperty.HasValue ?
                new ObjectParameter("idProperty", idProperty) :
                new ObjectParameter("idProperty", typeof(int));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspWAEntryDetailPropertyUpdate", idEntryParameter, idEntryDetailParameter, idProductParameter, idPropertyParameter, valueParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual ObjectResult<uspWAEntryDetailSearch_Result> uspWAEntryDetailSearch(Nullable<int> idEntry, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var idEntryParameter = idEntry.HasValue ?
                new ObjectParameter("idEntry", idEntry) :
                new ObjectParameter("idEntry", typeof(int));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspWAEntryDetailSearch_Result>("uspWAEntryDetailSearch", idEntryParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspWAEntryDetailUpdate(Nullable<int> idEntry, Nullable<int> idEntryDetail, Nullable<int> quantity, Nullable<decimal> purchasePrice, string dueDate, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var idEntryParameter = idEntry.HasValue ?
                new ObjectParameter("idEntry", idEntry) :
                new ObjectParameter("idEntry", typeof(int));
    
            var idEntryDetailParameter = idEntryDetail.HasValue ?
                new ObjectParameter("idEntryDetail", idEntryDetail) :
                new ObjectParameter("idEntryDetail", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(int));
    
            var purchasePriceParameter = purchasePrice.HasValue ?
                new ObjectParameter("purchasePrice", purchasePrice) :
                new ObjectParameter("purchasePrice", typeof(decimal));
    
            var dueDateParameter = dueDate != null ?
                new ObjectParameter("dueDate", dueDate) :
                new ObjectParameter("dueDate", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspWAEntryDetailUpdate", idEntryParameter, idEntryDetailParameter, quantityParameter, purchasePriceParameter, dueDateParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspWAEntryInsert(Nullable<int> idStore, Nullable<int> idSupplier, string entryType, Nullable<System.DateTime> date, string user, ObjectParameter idEntry, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var idStoreParameter = idStore.HasValue ?
                new ObjectParameter("idStore", idStore) :
                new ObjectParameter("idStore", typeof(int));
    
            var idSupplierParameter = idSupplier.HasValue ?
                new ObjectParameter("idSupplier", idSupplier) :
                new ObjectParameter("idSupplier", typeof(int));
    
            var entryTypeParameter = entryType != null ?
                new ObjectParameter("entryType", entryType) :
                new ObjectParameter("entryType", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspWAEntryInsert", idStoreParameter, idSupplierParameter, entryTypeParameter, dateParameter, userParameter, idEntry, returnCode, returnMessage);
        }
    
        public virtual ObjectResult<uspWAEntrySearch_Result> uspWAEntrySearch(string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspWAEntrySearch_Result>("uspWAEntrySearch", userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspWAEntryUpdate(Nullable<int> idEntry, Nullable<int> idStore, Nullable<int> idSupplier, string entryType, Nullable<System.DateTime> date, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var idEntryParameter = idEntry.HasValue ?
                new ObjectParameter("idEntry", idEntry) :
                new ObjectParameter("idEntry", typeof(int));
    
            var idStoreParameter = idStore.HasValue ?
                new ObjectParameter("idStore", idStore) :
                new ObjectParameter("idStore", typeof(int));
    
            var idSupplierParameter = idSupplier.HasValue ?
                new ObjectParameter("idSupplier", idSupplier) :
                new ObjectParameter("idSupplier", typeof(int));
    
            var entryTypeParameter = entryType != null ?
                new ObjectParameter("entryType", entryType) :
                new ObjectParameter("entryType", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspWAEntryUpdate", idEntryParameter, idStoreParameter, idSupplierParameter, entryTypeParameter, dateParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspWAProductStockAuditInsert(Nullable<int> idStore, Nullable<int> idProduct, Nullable<decimal> stock, string barcode, Nullable<System.DateTime> date, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var idStoreParameter = idStore.HasValue ?
                new ObjectParameter("idStore", idStore) :
                new ObjectParameter("idStore", typeof(int));
    
            var idProductParameter = idProduct.HasValue ?
                new ObjectParameter("idProduct", idProduct) :
                new ObjectParameter("idProduct", typeof(int));
    
            var stockParameter = stock.HasValue ?
                new ObjectParameter("stock", stock) :
                new ObjectParameter("stock", typeof(decimal));
    
            var barcodeParameter = barcode != null ?
                new ObjectParameter("barcode", barcode) :
                new ObjectParameter("barcode", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspWAProductStockAuditInsert", idStoreParameter, idProductParameter, stockParameter, barcodeParameter, dateParameter, userParameter, returnCode, returnMessage);
        }
    
        public virtual int uspWAProductStockInsert(Nullable<int> idStore, Nullable<int> idProduct, Nullable<decimal> stock, string user, string barcode, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var idStoreParameter = idStore.HasValue ?
                new ObjectParameter("idStore", idStore) :
                new ObjectParameter("idStore", typeof(int));
    
            var idProductParameter = idProduct.HasValue ?
                new ObjectParameter("idProduct", idProduct) :
                new ObjectParameter("idProduct", typeof(int));
    
            var stockParameter = stock.HasValue ?
                new ObjectParameter("stock", stock) :
                new ObjectParameter("stock", typeof(decimal));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            var barcodeParameter = barcode != null ?
                new ObjectParameter("barcode", barcode) :
                new ObjectParameter("barcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspWAProductStockInsert", idStoreParameter, idProductParameter, stockParameter, userParameter, barcodeParameter, returnCode, returnMessage);
        }
    
        public virtual int uspWAProductStockUpdate(Nullable<int> idStore, Nullable<int> idProduct, Nullable<decimal> stock, string user, ObjectParameter returnCode, ObjectParameter returnMessage)
        {
            var idStoreParameter = idStore.HasValue ?
                new ObjectParameter("idStore", idStore) :
                new ObjectParameter("idStore", typeof(int));
    
            var idProductParameter = idProduct.HasValue ?
                new ObjectParameter("idProduct", idProduct) :
                new ObjectParameter("idProduct", typeof(int));
    
            var stockParameter = stock.HasValue ?
                new ObjectParameter("stock", stock) :
                new ObjectParameter("stock", typeof(decimal));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspWAProductStockUpdate", idStoreParameter, idProductParameter, stockParameter, userParameter, returnCode, returnMessage);
        }
    }
}
